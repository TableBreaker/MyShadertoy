vec3 cameraWorldPos = vec3(0.0, 5.0, 0.0);
float skyHeight = 50.0;
vec3 upDir = vec3(0.0, 1.0, 0.0);
vec3 downDir = vec3(0.0, -1.0, 0.0);
vec3 fogColor = vec3(0.7, 0.7, 0.7);
float fogNear = 0.0;
float fogFarSky = 100.0;
float fogFarLand = 300.0;

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec3 viewDir = vec3(fragCoord.xy / iResolution.xy, 1.0) - 0.5;
    viewDir = normalize(viewDir);
    
    bool sky = viewDir.y > 0.0;
    
    if(sky)
    {
        float magnitude = (skyHeight - cameraWorldPos.y) / dot(viewDir, upDir);
        vec3 worldPos = cameraWorldPos + viewDir * magnitude;
        fragColor = texture(iChannel1, worldPos.xz * 0.001 + iTime * 0.2);
        fragColor = mix(fragColor, vec4(fogColor, 1.0), (worldPos.z - fogNear) / (fogFarSky - fogNear));
        
    }
    else
    {
        float magnitude = cameraWorldPos.y / dot(viewDir, downDir);
        vec3 worldPos = cameraWorldPos + viewDir * magnitude;
        fragColor = texture(iChannel0, worldPos.xz * 0.1 + vec2(0.0, iTime * 0.1));
        fragColor = mix(fragColor, vec4(fogColor, 1.0), (worldPos.z - fogNear) / (fogFarLand - fogNear));
    }
}